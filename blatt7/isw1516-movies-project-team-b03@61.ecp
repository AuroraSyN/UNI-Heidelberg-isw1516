<?xml version="1.0" encoding="ASCII"?>
<org.eclipse.emf.emfstore.common.model:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.eclipse.emf.emfstore.common.model="http://eclipse.org/emf/emfstore/common/model" xmlns:org.unicase.model.attachment="http://unicase.org/model/attachment" xmlns:org.unicase.model.classes="http://unicase.org/model/classes" xmlns:org.unicase.model.document="http://unicase.org/model/document" xmlns:org.unicase.model.requirement="http://unicase.org/model/requirement" xmlns:org.unicase.model.testcase="http://unicase.org/model/testcase" xmlns:org.unicase.model.usecase="http://unicase.org/model/usecase" xmlns:org.unicase.model.usertask="http://unicase.org/model/usertask">
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="ReqSpec Document">
    <subsections xsi:type="org.unicase.model.document:CompositeSection" name="Functional Requirements">
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Actors">
        <modelElements xsi:type="org.unicase.model.requirement:Actor" name="Manager" description="A Person who manages Movies and Series and their Performers.&#xD;&#xA;&#xD;&#xA;Tasks: Movie Management.&#xD;&#xA;Criteria of success: The data of movies and series are consistent. Ease of use, fast search.&#xD;&#xA;&#xD;&#xA;Communication partner: Nobody&#xD;&#xA;&#xD;&#xA;Degree of innovation: Minimal&#xD;&#xA;&#xD;&#xA;Userprofile 1 &quot;Power-User&quot;:&#xD;&#xA;Knowledge movie management: Knows how to organize and structure movies and series data.&#xD;&#xA;General software knowledge: Uses a computer and other electronic devices for more than 15 years, Actually owns and uses different electronic devices.&#xD;&#xA;&#xD;&#xA;Userprofile 2 &quot;Novice-User&quot;:&#xD;&#xA;Knowledge movie management: Knows that movies and series have a title, performers and year of production etc.&#xD;&#xA;General software knowledge: Rarely use the computer in his daily life (less than 2 years), No prior knowledge of movie management applications." initiatedUseCases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.5"/>
        <modelElements xsi:type="org.unicase.model.requirement:Actor" name="Loaner" description="A Person who loans Media (Movies, Series, Seasons, Episodes) and returns them.&#xD;&#xA;&#xD;&#xA;Tasks: Loan Management&#xD;&#xA;&#xA;Criteria of success: &#xA;- Intuitive Web UI (self explaining)&#xA;- Fast and easy search&#xA;- Ease of use in loaning and returning&#xA;- Easy access to loaning related information (list of loaned media and return dates)&#xD;&#xA;&#xD;&#xA;Communication partner: Friends and relatives.&#xD;&#xA;&#xD;&#xA;Degree of innovation: Minimal&#xD;&#xA;&#xD;&#xA;Userprofile 1 &quot;Power-User&quot;:&#xD;&#xA;Buying and borrowing over the internet are a natural way to do things.&#xA;Knowledge about borrowing: has prior experience in borrowing and returning Items via internet.&#xD;&#xA;General software knowledge: Uses a computer and other electronic devices for more than 15 years.&#xA;&#xD;&#xA;Userprofile 2 &quot;Novice-User&quot;:&#xA;Is not &quot;computer literate&quot;: is not used in doing things via computer or the internet.&#xD;&#xA;Knowledge on borrowing: knows that Media have a title, performers, etc.  but has no prior experience of borrowing via the Web.&#xD;&#xA;General software knowledge: Rarely use the computer in his daily life (less than 2 years). Requires to do things very easily.&#xA;" initiatedUseCases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.1"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Persona Descriptions (.pdf)" description="Description of two very different potential Loaner Actors (Borrowers).&#xA;File is in PDF format." fileName="06-Persona_compl.pdf" fileID="_CQNnwJKnEeWuTsBo9Rne5w" fileSize="63921"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Persona Descriptions (.docx)" description="Description of two very different potential Loaner Actors (Borrowers).&#xA;File is in .docx format." fileName="06-Persona_compl.docx" fileID="_EzMh4JKnEeWuTsBo9Rne5w" fileSize="42125"/>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="User Tasks">
        <modelElements xsi:type="org.unicase.model.usertask:UserTask" name="Movie Management" description="The goal of this user task is to manage movies and performers of a movie collection. &#xD;&#xA;Therefore, he/she creates movies and performers and documents their properties, e.g. name and rating. &#xD;&#xA;The actor can loan movies and receive returned movies. Furthermore, the actor can record the last watch date for a movie. &#xD;&#xA;&#xD;&#xA;The actor can also create TV-Series with different Seasons which contain a different number of Episodes.&#xD;&#xA;&#xA;New Requirements (5.5):&#xA;The actor can&#xD;&#xA;- define which Movies, Series, Seasons and Episodes are lonable (visible via the Web UI) and can be loaned. He must observe that:&#xD;&#xA;- &quot;Parent Types&quot; (e.g. seasons) can be defined as loanable only if the contained child items (e.g. all episodes of a season) are loanable. The same applies to series and contained seasons.&#xA;- view all Media that are loanable (visible)&#xD;&#xA;- view all Media that are loaned (NOT available)&#xD;&#xA;&#xD;&#xA;This user task has medium priority, is executed often and can be interrupted at any time. " start="" end="">
          <subTasks name="Manage a Movie" description="Add and describe a movie with typical data like its title, release date, production country, performers etc. Or change an existing description. Or view movies." example="Provide default values wherever possible. Implemented via Add Movie, Show Movie, Modify Movie, Add Movie Collection. If &quot;view movies&quot; means &quot;list movies&quot;, then also via List Movies, Sort Movies.">
            <subSubTasks name="Remove existing Movie" description="Problem: removing a Movie might result in an orphaned Performer without Movies." example="Ensure the consistency of Performers and Movies. Implemented via Delete Movie." type="problem"/>
            <subSubTasks name="Correct a movie" description="The data of a movie should be correct, that means be the same as the data which can be found in the internet or a video store" example="Implement via Show Movie, Modify Movie." type="variant"/>
            <subSubTasks name="Complete a movie" description="The person describing the movie might not know all important data" example="Fetch the movie data from a movie data base like IMDB. Implemented via Show Movie, Modify Movie." type="problem"/>
          </subTasks>
          <subTasks name="Manage a Performer" description="Add and describe a performer featuring in movies with typical data like e.g. name and date of birth. Or change an existing description. Or view performers." example="Implemented via Add Perfomer, Show Performer, Modify Performer. If &quot;view performers&quot; means &quot;list performers&quot;, then also via List Performers, Sort Performers.">
            <subSubTasks name="Remove existing Performer" description="Problem: removing a performer to an existing movie removes interesting data for a movie which should be prohibited. However, if the performer is wrong, it should be allowed to delete it." example="Ensure the consistency of Performers and Movies. Implemented via Delete Performer." type="problem"/>
            <subSubTasks name="Complete a Performer" description="The person describing the Performer might not know all important data  (in analogy to the pre-specified 'Complete a movie' subtask above)." example="Fetch the Performer data from a movie data base like OFDB. Implemented via Show Performer, Modify Performer." type="problem"/>
          </subTasks>
          <subTasks name="Manage Movie Collections" description="Create, edit or delete movie collections. Or share them with others." example="Implemented via Load Project, Create Project, Checkout Project, Share Project, Commit Project, Delete Project, Add Movie Collection, List Movies, Sort Movies.">
            <subSubTasks name="Merge two Movie Collections" description="Merge two movie collections so that there are no duplicates" example="Check for duplicates and let user decide what to keep and what not. Implemented via Update Project." type="variant"/>
            <subSubTasks name="Manage associated Media" description="Link Movies / Episodes to a Movie Collection. Or unlink them. Might result in &quot;orphaned Movies&quot; without Movie Collection or an &quot;orphaned Movie Collection&quot; without a Movie." example="Ensure consistency of Movies / Episodes and Movie Collections. Possibly offer to remove the orphaned item from the data base. Implemented via Add Movie, Delete Movie, List Movies, Sort Movies, Add Series, Add Season, Add Episode, Delete Series, Delete Season, Delete Episode, List Series, List Seasons, List Episodes, Sort Series." type="problem"/>
          </subTasks>
          <subTasks name="Manage Series" description="Create, edit or delete a series or a season for a series or an episodes for a season with typical data like its title, release date, broadcasted by, production country etc. Or view them." example="When creating or editing a season for a series, the data of the series such as the title, studio, broadcasted at, date of production etc. of the series are suggested for the season. And similarly with data for seasons suggested for episodes. Derive data for series from data of episodes and/or seasons, e.g. collect all performers from episodes and associate them with season. Implemented via Add Series, Add Season, Add Episode, Suggest Episode Data, Show Series, Show Season, Show Episode, Calculate Performer, Modify Series, Modify Season, Modify Episode,  List Series, List Seasons, List Episodes, Sort Series.">
            <subSubTasks name="Remove existing Series, Seasons or Episode" description="Problem: Removing a Series might result in an orphaned Season without a Series, removing a Season in an orphaned Episode without a Season. And vice-versa." example="Delete all included Seasons when deleting a Series and delete included Episodes when deleting a Season. Implemented via Delete Series, Delete Season, Delete Episode." type="problem"/>
            <subSubTasks name="(Variant) Associate an existing Movie as an Episode to a Season." description="Associate an existing Movie as an Episode to a Season." example="As for creation of Episodes: suggest data from Season. Implemented via AssociateMovieToSeason, List Seasons, Suggest Episode Data." type="problem"/>
          </subTasks>
          <subTasks name="Manage Media Loans" description="Define, view or change which items are loanable (visible). View which items are loaned." example="Note: parent items may become loanable ONLY if ALL child items are loanable. Implemented via Mark Item Loanable, Unmark Item Loanable, List Loanable Items, List Loaned Items, Sort Items, Filter Items.">
            <subSubTasks name="(Problem) Define &quot;incomplete items&quot; as loanable." description="Make an error while defining loanability of parent items (example: not all associated child items are available for borrowing)." example="Enforce consistency of parent / child loanability according to Requirements. In short: parent Type items may become loanable ONLY if ALL items of ALL child Types are loanable." type="problem"/>
          </subTasks>
          <subTasks name="Rate a Media item" description="Assign a valid rating to a Movie, Episode, Season, Series or Performer. Use a dropdown menu for consistency." example="A valid rating ranges between zero and five. Implemented via Rate Movie, Overall Rating of Movie, Rate Series, Rate Season, Rate Episode, Rate Performer."/>
          <subTasks name="Watch Media item" description="Watch a Movie, Series, Season or Episode." example="Implemented via Watch Movie."/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usertask:UserTask" name="Loan Management" description="The goal of this user task is to loan available items (Movies, Series, Seasons or Episodes) from a managed movie collection.&#xD;&#xA;&#xA;&#xA;New Requirements (5.5):&#xA;The actor can&#xD;&#xA;- search for all types of available items by title (Movies, Series, Seasons and Episodes)&#xD;&#xA;- view information on available items (Parent Types are available only if all child items are)&#xD;&#xA;- loan available (lonable AND NOT loaned) items for an arbitrary amount of time (up to 2 weeks)&#xD;&#xA;- show information on loaned items, their return dates etc.&#xD;- return loaned items in a &quot;complete&quot; state. (For parent Types this means that all associated child items are returned, e.g. all Episodes of a borrowed Season).&#xD;&#xA;&#xA;&#xD;&#xA;This user task has high priority. It is executed often and should NOT be interrupted with the goal to improve the user's 'Movie Experience'.&#xD;&#xA;" start="" end="">
          <subTasks name="Loan Item" description="Loan a Movie, Series, Season or Episode if it is lonable (visible) and not loaned (i.e. available) for an allowed amount of days. Or show loan info (loaned items and return dates)." example="Maximum loan time is 14 days. A parent Type (e.g. Season) can be loaned only if all child items (Episodes) are loanable AND available. Implemented via Loan Item, Filter Items, Sort Items, Show Movie, List Performers, Show Series, Show Season, Show Episode, List Seasons, List Episodes."/>
          <subTasks name="Return Item" description="Return a Movie, Series, Season or Episode in a &quot;complete&quot; state. For parent Type items this means that all associated child items are returned together (e.g. all Episodes of a loaned Season)." example="Implemented via Return Item, possibly also with List Seasons, List Episodes.">
            <subSubTasks name="(Problem) &quot;Incomplete Item Return&quot;" description="Make an error while returning parent items: not all child items are returned (e.g. incomplete Series: some Seasons are missing, or incomplete Seasons: some Episodes are missing)." example="Enforce parent / child consistency of returned items according to Requirements. Also see description of the implementing function: Return Item." type="problem"/>
          </subTasks>
        </modelElements>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Use Cases">
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Start Movie Manager" description="The actor wants to manage Movies and Performers" initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.1" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.0" precon="The system Movie Manager is NOT started.&#xA;Workspace: NONE&#xA;" postcon="-&#x9;System has loaded all projects from file.&#xA;-&#x9;W1 Overview and W4.1 List Projects&#xA;">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor selects the Start System option." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.0/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.0/@humanSteps.0"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System executes the Load Projects function on startup that shows all Projects and their Movies and Performers.&#xA;W1 Overview and W4.1 List Projects" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.0"/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Quit Movie Manager" description="The actor wants to quit the system." initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.1" precon="The system Movie Manager is started.&#xA;Workspace: ANY" postcon="System has shut down" rul="">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor quits the system. " targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.1/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.1/@humanSteps.0"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System shuts down."/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Manage Movie Data" description="The actor wants to add, modify or delete a Movie." initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.0" identifiedClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.0" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.2" precon="The system Movie Manager is started. &#xA;W1 Overview or W2.1 List Movies" postcon="Actor has managed Movies.&#xA;W1 Overview OR W2 Movies&#xA;" rul="[Autosave Rule]: After every action from Actor, all information is automatically saved locally." exc="" sync="syncX">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses to view a list of all stored movies" targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to sort the list of all movies according to the given sort criterion." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.1" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.0"/>
            <options name="New Option" description="Actor selects an existing movie." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.2" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to add a new movie." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.3" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.0"/>
          </humanSteps>
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor enters information to modify the selected Movie and saves all changes." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.4" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.1"/>
            <options name="New Option" description="Actor chooses to delete the selected Movie." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@iTSystemSteps.5" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.1"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System executes the List Movies function to show a list of all movies.&#xA;W2.1 List Movies" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.5"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Sort Movies function.&#xA;W2.1 List Movies" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.3"/>
          <iTSystemSteps name="New IT System Step" description="System shows the details of the selected Movie.&#xA;W2.2 Detail Movie" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4" linkedStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.1"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Add Movie function. &#xA;W2.2: Detail Movie" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.0" linkedStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2/@humanSteps.1"/>
          <iTSystemSteps name="New IT System Step" description="System executes Modify Movie function.&#xA;W2.2: Detail Movie" exception="[Exception: Wrong Data Format]" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.1"/>
          <iTSystemSteps name="New IT System Step" description="System executes Delete Movie function.&#xA;W2.2: Detail Movie" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.2"/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Manage Performer Data" description="The actor wants to add, modify or delete a Performer." initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.0" identifiedClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.1" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.2" precon="The system Movie Manager is started.&#xA;W1 Overview OR W3.1 List Performers" postcon="Actor has managed Performers.&#xA;W1 Overview OR W3 Performers" rul="[Autosave Rule]: After every action from Actor, all information is automatically saved locally." sync="syncX">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses to view a list of all stored Performers" targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to sort the list of all Performers according to the given sort criterion." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.1" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.0"/>
            <options name="New Option" description="Actor selects an existing Performer." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.2" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to add a new Performer." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.3" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.0"/>
          </humanSteps>
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor enters all available information to modify the selected Performer and saves all changes." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.4" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.1"/>
            <options name="New Option" description="Actor wants to delete the selected Performer." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@iTSystemSteps.5" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3/@humanSteps.1"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System executes the List Performers function to show a list of all Performers.&#xA;W3.1 List Performers" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.5"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Sort Performers function.&#xA;W3.1 List Performers" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.3"/>
          <iTSystemSteps name="New IT System Step" description="System shows the details of the selected Performer.&#xA;W3.2: Performer Detail" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.4"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Add Performer function. &#xA;W3.2: Detail Performer" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.0"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Modify Performer function. &#xA;W3.2: Detail Performer" exception="[Exception: Wront Data Format]" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.1"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Delete Performer function. &#xA;W3.2: Detail Performer" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.2"/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Manage Ratings" description="The actor wants to rate a Movie or Performer in his/her collection. Whenever a Movie/Performer was rated, the overall rating of the Movie is calculated." initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.0" identifiedClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.3/@modelElements.1" precon="The system Movie Manager is started. &#xA;W2.1 List Movies OR W3.1: List Performers" postcon="The Movie or Performer is rated.&#xA;An Overall Rating for Movies was calculated.&#xA;W2.1: List Movies OR W3.1: List Performers" rul="[Overall Rating Rule]: &#xA;OverallRating = (rating of Movie + max(list of ratings of all Performers))&#xA;&#xA;[Movie and Performer Rating Rule]:&#xA;The actor is only allowed to enter numbers between 0 and 5.&#xA;&#xA;[Autosave Rule]: After every action from Actor, all information is automatically saved locally." sync="syncX"/>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Manage Watched Movies" description="The actor wants to make sure that s/he watches every Movie once in a while." initiatingActor="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.0" identifiedClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.0" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.7" precon="The system Movie Manager is started.&#xA;W2.1 List Movies" postcon="Movie is saved with current Date as Watch Date&#xA;W1 Overview OR W2.2 Detail Movie" rul="[Watch Rule]: Movies that have no Watch Date are shown at the end of the list." exc="[Exception: Movie cannot be watched because it is currently loaned]: A Movie cannot be watched if it is currently loaned." sync="syncX">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses to sort all movies after the Watch date." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@humanSteps.0"/>
            <options name="New Option" description="Actor selects an existing Movie." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@iTSystemSteps.1" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@humanSteps.0"/>
          </humanSteps>
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses the option Watch Movie" targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@iTSystemSteps.2" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@humanSteps.1"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System executes Sort Movies function and shows a list of all Movies sorted by attribute Watch Date in Ascending order (last watched Movies are shown first)&#xA;W2.1 List Movies" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.3" linkedStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@humanSteps.1"/>
          <iTSystemSteps name="New IT System Step" description="System shows the details of the selected Movie&#xA;W2.2 Detail Movies" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4" linkedStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5/@humanSteps.1"/>
          <iTSystemSteps name="New IT System Step" description="System saves the selected Movie with the current Date as Watch Date&#xA;W2.1 List Movies" exception="[Exception: Movie cannot be watched because it is currently loaned]" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.7"/>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.usecase:UseCase" name="Project Management" description="The actor wants to manage Projects containing Movies, Performers." systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.4" precon="The system Movie Manager is started.&#xA;W1 Overview Or W4.1 List Projects" postcon="Actor has managed Projects.&#xA;W1 Overview OR W4.1 List Projects" sync="syncX">
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses to create a new Project." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.0" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to checkout the latest version of a Project." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.1" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.0"/>
            <options name="New Option" description="Actor chooses to share an un-shared Project and make the Project versioned." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.2" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.0"/>
          </humanSteps>
          <humanSteps name="New Human Step">
            <options name="New Option" description="Actor chooses to commit all changes to a Project. " targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.3" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.1"/>
            <options name="New Option" description="Actor chooses to update an existing Project to the latest version." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.4" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.1"/>
            <options name="New Option" description="Actor chooses to delete a Project." targetStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@iTSystemSteps.5" sourceStep="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6/@humanSteps.1"/>
          </humanSteps>
          <iTSystemSteps name="New IT System Step" description="System executes the Create Project function. &#xA;W1 Overview" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.1"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Checkout Project function. &#xA;W4.1 List Projects" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.2"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Share Project function. The Project is now versioned.&#xA;W1 Overview" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.3"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Commit Project function. A new version of the Project is created.&#xA;W1 Overview" includedSystemFunction="//@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.4"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Update Project function. The Project is updated.&#xA;W1 Overview"/>
          <iTSystemSteps name="New IT System Step" description="System executes the Delete Project function. The Project is deleted.&#xA;W1 Overview"/>
        </modelElements>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Domain Data">
        <modelElements xsi:type="org.unicase.model.classes:Class" name="Movie" description="A movie can have the following information: title, time, category, date, rating and linked Performers." participatedUseCases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.5" subClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.2"/>
        <modelElements xsi:type="org.unicase.model.classes:Class" name="Performer" description="A Performer can have the following information: title, rating, references to Movies" participatedUseCases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.4"/>
        <modelElements xsi:type="org.unicase.model.classes:Class" name="Episode" description="An episode has the same attributes as a movie." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" superClasses="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.0"/>
        <modelElements xsi:type="org.unicase.model.classes:Class" name="Season" description="A season can have the following information: title, releaseDate, broadcastedAt and date of production."/>
        <modelElements xsi:type="org.unicase.model.classes:Class" name="Series" description="A season can have the following information: title, studio, broadcastedAt and date of production."/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="DomainData-Astah" description="Astah-file containing the domain data of the MovieManager." fileName="DomainData.asta" fileID="_bwOAgJGlEeWYE8kwusEGfg" fileSize="20290"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="DomainData-Image" description="Image-file containing the domain data of the MovieManager." fileName="DomainData.png" fileID="_cTK8kJGlEeWYE8kwusEGfg" fileSize="28888"/>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:CompositeSection" name="System Functions">
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Functions for Movies">
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Movie" description="This function adds a new Movie without any information." output="the new Movie" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Modify Movie" description="This function modifies an existing Movie" input="The information to be modified" output="" exception="[Exception: Wrong Data Format]" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Movie" description="This function delets an existing Movie." input="The Movie to be deleted" output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Sort Movies" description="This function sorts Movie depending on the Sort criteria" input="Sort criteria, attribute of Movie in Ascending/Descending order" output="" exception="Sorted list of Movies" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.5" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Show Movie" description="This function shows the details of a Movie" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.2/@modelElements.5" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Movies" description="This function lists all Movies with their attributes." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.2" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Rate Movie" description="This function rates the Movie. A rating between 0-5 can be given for a Movie." input="Rating between 0-5" output="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Watch Movie" description="This function sets the watch date of the Movie to the current date. This function mimics the actual activity of watching a Movie." output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.5" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Overall Rating of Movie" description="This function computes the overall rating of a Movie. The overall Rating is computed based on the single rating of the Movie + the maximum of the ratings of the linked Performers." output="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Movie Collection" description="This function adds a new MovieCollection without any information." output="the MovieCollection" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.0"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Functions for Performers">
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Performer" description="This function adds a new Performer without any information." output="the Performer" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Modify Performer" description="This function modifies an existing Performer" input="The information to be modified" output="" exception="[Exception: Wrong Data Format]" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.2/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Performer" description="This function delets an existing Performer." input="The Performer to be deleted" output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.2/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Sort Performers" description="This function sorts Performers depending on the Sort criteria" input="Sort criteria, attribute of Performers in Ascending/Descending order" output="" exception="Sorted list of Performers" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.2/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Show Performer" description="This function shows the details of a Performer." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.2/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Performers" description="This function lists all Performers with their attributes." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" output="" exception="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.3" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Rate Performer" description="This function rates the Performer. A rating between 0-5 can be given for a Performer." input="Rating between 0-5" output="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.2/@modelElements.1"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Functions for Projects">
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Load Project" description="This function shows all Projects and their Movies and Performers." output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.0" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Create Project" description="This function creates an empty Project. " output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Checkout Project" description="This function checks out an existing Project from the server." input="Project for checkout" output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Share Project" description="This function shares a Project. This project is now versioned." input="Project to be shared" output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Commit Project" description="This function saves all changes to the Project." input="Changes on Movies and/or Performers" output="" usecases="//@modelElements.0/@subsections.0/@subsections.2/@modelElements.6" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Update Project" description="This function retrieves all changes for a given Project from the Server." input="Project to be updated" output="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Project" description="This function deletes a Project" input="Project to be deleted" output="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Functions for Series" description="">
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Series" description="This function adds a new series without any information." output="the new series" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Season" description="This function adds a new season without any information." output="the new season" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Add Episode" description="This function adds a new series without any information." output="the new episode" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.2"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Sort Series" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Show Series" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Modify Series" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Series" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Calculate Perfromer" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Rate Series" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Show Season" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.2"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Modify Season" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.2"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Season" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.2"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Show Episode" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Rate Episode" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Modify Episode" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Delete Episode" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Seasons" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.4"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="AssociateMovieToSeason" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.4"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Suggest Episode Data" description="" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.4"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Series" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Episodes" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" exception="" workspace="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Functions for Loan Management" description="">
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Mark Item Loanable" description="This function marks an item as loanable.&#xD;&#xA;For each item type there is a separate function.&#xA;&#xA;Preconditions: &#xA;- Item has attribute isLoanable = false&#xA;&#xD;&#xA;Postconditions: &#xA;- Item has attribute isLoanable = true&#xA;- For seasons: all contained episodes have attribute isLoanable = true&#xA;- For series: all contained seasons and episodes have attribute isLoanable = true&#xA;&#xA;" input="Item" output="Item with attribute isLoanable = true" exception="none"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Unmark Item Loanable" description="This function marks an item as NOT loanable.&#xD;&#xA;For each item type, there is a separate function.&#xD;&#xA;&#xD;&#xA;Preconditions:&#xD;&#xA;- Item has attribute isLoanable = true&#xD;&#xA;- Item has attribute isLoaned = false&#xD;&#xA;- For seasons: all contained episodes have attribute isLoaned = false&#xD;- For series: all contained seasons and episodes have attribute isLoaned = false&#xD;&#xA;&#xA;&#xD;&#xA;Postconditions: &#xD;&#xA;- Item has attribute isLoanable = false&#xD;&#xA;- For seasons: all contained episodes have attribute isLoanable = false&#xD;- For series: all contained seasons and episodes have attribute isLoanable = false&#xD;&#xA;&#xA;" input="Item" output="Item with attribute isLoanable = false" exception="If item is currently loaned, the item cannot be marked as not loanable. Unmodified items, Output = error."/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Return Item" description="This function marks an item as NOT loaned (returned).&#xD;&#xA;For each item type there is a separate function.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Preconditions: &#xD;&#xA;- Item has attribute isLoaned = true&#xD;&#xA;- For seasons: all contained episodes have attribute isLoaned = true&#xD;- For series: all contained seasons and episodes have attribute isLoaned = true&#xD;&#xA;&#x9;Note: we cannot return items if they are not loaned.&#xD;&#xA;- Item and ALL contained child types are loaned by the current loaner&#xD;&#xA;- The current date (date of return) must match the attribute 'returnDate' of the item(s)&#xD;&#xA;&#xD;&#xD;&#xA;Postconditions: &#xD;&#xA;- Item has attribute isLoaned = false&#xD;&#xA;- For seasons: all contained episodes have attribute isLoaned = false&#xD;- For series: all contained seasons and episodes have attribute isLoaned = false&#xD;&#xA;&#xA;" input="Item" output="Item with attribute isLoaned = false" exception="If currentDate does not match returnDate: output Error message"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Loan Item" description="This function marks an item as loaned.&#xA;For each item type there is a separate function.&#xA;&#xA;&#xA;Preconditions: &#xA;- Item has attribute isLoaned = false&#xA;- For seasons: all contained episodes have attribute isLoaned = false&#xD;&#xA;- For series: all contained seasons and episodes have attribute isLoaned = false&#xA;&#x9;Note: loaner cannot loan items if they are loaned already&#xA;- Item and ALL contained child types are loaned by the same loaner&#xA;- The attribute 'returnDate' must not exceed 14 days in the future&#xA;&#xA;&#xA;Postconditions: &#xA;- Item has attribute isLoaned = true&#xA;- For seasons, all contained episodes have attribute isLoaned = true&#xD;&#xA;- For series, all contained seasons and episodes have attribute isLoaned = true&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" input="Item,  return date" output="Item with attribute isLoaned = true" exception="if returnDate > currentDate+14days: output Error message"/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Loanable Items" description="This system function lists all items that are loanabe (visible and available for borrowing).&#xA;&#xA;Precondition: given List of Items is not empty.&#xA;&#xA;Postcondition: given List of Items is unchanged.&#xA;" input="List of Items" output="Filtered List of Items. Filter Criterium: isLoanable = true." exception=""/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="List Loaned Items" description="This system function lists all items that are loaned (borrowed and thus not available).&#xA;&#xD;&#xA;Precondition: given List of Items is not empty.&#xD;&#xA;&#xD;&#xA;Postcondition: given List of Items is unchanged.&#xD;&#xA;" input="List of Items" output="Filtered List of Items. Filter Criterium: isLoaned = true." exception=""/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Sort Items " description="This function sorts a List of Items depending on the Sort criteria.&#xD;&#xA;&#xA;It is intentended to sort a List of Media Items (Movies, Series, Seasons, Episodes) by name using the item's 'title' attribute.&#xA;&#xA;Precondition: List of items is not empty.&#xA;&#xA;Postcondition: List is sorted, otherwise unchanged.&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" input="List of Items, Sort criteria, attribute of Ascending/Descending order" output="Sorted List of Items" exception=""/>
          <modelElements xsi:type="org.unicase.model.requirement:SystemFunction" name="Filter Items" description="This function filters a List of Items by name using the item's 'title' attribute.&#xD;&#xA;&#xA;It is intended to iplement the 'search' functionality of the WebClient.&#xA;&#xA;Preconditions:&#xA;- List of items is not empty.&#xA;- &quot;Search String&quot; is not empty.&#xA;&#xA;Postcondition: a Filtered List (the Original List remains unchanged)&#xA;" input="List of Items, &quot;Search String&quot;" output="Filtered List of Items. Filter criterium: &quot;Search String&quot; is present in 'title' attribute." exception=""/>
        </subsections>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Interaction Data">
        <modelElements xsi:type="org.unicase.model.document:LeafSection" name="Interaction Data for Loan Management" description="The purpose of Loan Management is:&#xD;&#xA;- show every information available (title, performers, etc.) for the according object (movie, series, season, episode)&#xD;&#xA;- allow the actor Manager to set an object as being loanable&#xD;&#xA;- allow the actor Loaner to loan an object:&#xD;&#xA;&#x9;*set object as being loaned&#xD;&#xA;&#x9;*set returnDate according to the Loaner's input (Rule 1)&#xD;&#xA;- allow the actor Loaner to return a loaned object:&#xD;&#xA;&#x9;*set object as being available/not loaned&#xD;&#xA;&#x9;*delete previous returnDate">
          <modelElements xsi:type="org.unicase.model.classes:Class" name="Movie" description="A movie can have the following information: title, time, category, date, rating, linked Performers, being loanable, returnDate and information about the movie being currently loaned or not.&#xD;&#xA;If a new movie is created, the following attributes are set according to the following list by default (Creation-Rule):&#xD;&#xA;- loanable = True&#xD;&#xA;- returnDate = 0&#xD;&#xA;- isLoaned = False&#xD;&#xA;&#xD;&#xA;Interactions:&#xD;&#xA;1. The information of the movie (title, time, category, date, rating, linked Performers, being loanable, returnDate and information about the movie being currently loaned or not) is shown to the Loaner.&#xD;&#xA;2. The Creation-Rule sets the attributes loanable, returnDate and isLoaned&#xD;&#xA;3. The Manager is able to set a movie as being loanable or being not loanable (according to Rule 4 and 5).&#xD;&#xA;4. The Loaner is able to loan a movie (set the attribute isLoaned as True).&#xD;&#xA;5. The Loaner is able to pick a returnDate for a loaned movie (according to Rule 1).&#xD;&#xA;6. The Loaner is able to return a movie (set the attribute isLoaned as False)(according to Rule 2 and 3).&#xD;&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1" subClasses="//@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.2">
            <attributes name="title" description="Title of the movie." type="String" defaultValue="" properties=""/>
            <attributes name="time" description="The Playtime of the movie." type="Integer" defaultValue=""/>
            <attributes name="category" description="The category, the movie belongs to." type="String" defaultValue=""/>
            <attributes name="date" description="The date of the movie's production." type="Date" defaultValue=""/>
            <attributes name="rating" description="The overall rating of the movie." type="Integer" defaultValue=""/>
            <attributes name="performers" description="A list containg performers starring in the movie." type="ArrayList&lt;Performer>" defaultValue=""/>
            <attributes name="loanable" description="Sets the movie as being loanable or being not loanable." type="Boolean" defaultValue="True"/>
            <attributes name="returnDate" description="Contains the returnDate of the movie, if the movie is loaned. If the movie isn't loaned, the attribute may contain 0." type="Date" defaultValue="0"/>
            <attributes name="isLoaned" description="Sets the movie as being loaned or being not loaned." type="Boolean" defaultValue="False"/>
          </modelElements>
          <modelElements xsi:type="org.unicase.model.classes:Class" name="Performer" description="A Performer can have the following information: title, rating, references to Movies" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1">
            <attributes name="title" description="The name of the performer." type="String" defaultValue=""/>
            <attributes name="rating" description="The rating of the performer." type="Integer" defaultValue=""/>
            <attributes name="movieReference" description="References to movies, the performer stars in." type="Movie" defaultValue=""/>
          </modelElements>
          <modelElements xsi:type="org.unicase.model.classes:Class" name="Episode" description="An episode has the same attributes as a movie." superClasses="//@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.0">
            <attributes name="time" description="The Playtime of the episode." type="Integer" defaultValue=""/>
            <attributes name="title" description="Title of the episode." type="String" defaultValue=""/>
            <attributes name="category" description="The category, the episode belongs to." type="String" defaultValue=""/>
            <attributes name="date" description="The date of the episode's production." type="Date" defaultValue=""/>
            <attributes name="rating" description="The overall rating of the episode." type="Integer" defaultValue=""/>
            <attributes name="performers" description="A list containg performers starring in the episode." type="ArrayList&lt;Performers>" defaultValue=""/>
            <attributes name="lonable" description="Sets the episode as being loanable or being not loanable." type="Boolean" defaultValue="True"/>
            <attributes name="returnDate" description="Contains the returnDate of the episode, if the episode is loaned. If the episode isn't loaned, the attribute may contain 0." type="Date" defaultValue="0"/>
            <attributes name="isLoaned" description="Sets the episode as being loaned or being not loaned." type="Boolean" defaultValue="False"/>
          </modelElements>
          <modelElements xsi:type="org.unicase.model.classes:Class" name="Season" description="A season can have the following information: title, releaseDate, broadcastedAt, date of production, being loanable, returnDate and information about the movie being currently loaned or not.&#xD;&#xA;If a new movie is created, the following attributes are set according to the following list by default (Creation-Rule):&#xD;&#xA;- loanable = True&#xD;&#xA;- returnDate = 0&#xD;&#xA;- isLoaned = False&#xD;&#xA;&#xD;&#xA;Interactions:&#xD;&#xA;1. The information of the season is shown to the Loaner.&#xD;&#xA;2. The Creation-Rule sets the attributes loanable, returnDate and isLoaned&#xD;&#xA;3. The Manager is able to set a season as being loanable or being not loanable (according to Rule 4 and 5).&#xD;&#xA;4. The Loaner is able to loan a season (set the attribute isLoaned as True).&#xD;&#xA;5. The Loaner is able to pick a returnDate for a loaned season (according to Rule 1).&#xD;&#xA;6. The Loaner is able to return a season (set the attribute isLoaned as False)(according to Rule 2 and 3)." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1">
            <attributes name="title" description="Title of the season." type="String" defaultValue=""/>
            <attributes name="releaseDate" description="The date of the season's release." type="Date" defaultValue=""/>
            <attributes name="broadcastedAt" description="The television-network broadcasting the season." type="String" defaultValue=""/>
            <attributes name="productionDate" description="The date of the season's production." type="Date" defaultValue=""/>
            <attributes name="loanable" description="Sets the season as being loanable or being not loanable." type="Boolean" defaultValue="True"/>
            <attributes name="returnDate" description="Contains the returnDate of the season, if the season is loaned. If the season isn't loaned, the attribute may contain 0." type="Date" defaultValue="0"/>
            <attributes name="isLoaned" description="Sets the season as being loaned or being not loaned." type="Boolean" defaultValue="False"/>
          </modelElements>
          <modelElements xsi:type="org.unicase.model.classes:Class" name="Series" description="A season can have the following information: title, studio, broadcastedAt, date of production, being loanable, returnDate and information about the movie being currently loaned or not.&#xD;&#xA;If a new movie is created, the following attributes are set according to the following list by default (Creation-Rule):&#xD;&#xA;- loanable = True&#xD;&#xA;- returnDate = 0&#xD;&#xA;- isLoaned = False&#xD;&#xA;&#xD;&#xA;Interactions:&#xD;&#xA;1. The information of the series is shown to the Loaner.&#xD;&#xA;2. The Creation-Rule sets the attributes loanable, returnDate and isLoaned&#xD;&#xA;3. The Manager is able to set a series as being loanable or being not loanable (according to Rule 4 and 5).&#xD;&#xA;4. The Loaner is able to loan a series (set the attribute isLoaned as True).&#xD;&#xA;5. The Loaner is able to pick a returnDate for a loaned series (according to Rule 1).&#xD;&#xA;6. The Loaner is able to return a series (set the attribute isLoaned as False)(according to Rule 2 and 3)." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.1">
            <attributes name="title" description="Title of the series." type="String" defaultValue=""/>
            <attributes name="studio" description="The Production-Studio of the series." type="String" defaultValue=""/>
            <attributes name="broadcastedAt" description="The television-network broadcasting the series." type="String" defaultValue=""/>
            <attributes name="productionDate" description="The date of the series's production." type="Date" defaultValue=""/>
            <attributes name="loanable" description="Sets the series as being loanable or being not loanable." type="Boolean" defaultValue="True"/>
            <attributes name="returnDate" description="Contains the returnDate of the series, if the series is loaned. If the series isn't loaned, the attribute may contain 0." type="Date" defaultValue="0"/>
            <attributes name="isLoaned" description="Sets the series as being loaned or being not loaned." type="Boolean" defaultValue="False"/>
          </modelElements>
          <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="InteractionData - Image" description="Image-file containing the interaction data of the Sytemfunctions Loan Management." fileName="InteractionData.png" fileID="_MKO-kJQgEeWrXcK14mBzQw" fileSize="32862"/>
        </modelElements>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:CompositeSection" name="Workspaces">
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="W1 Overview" description="" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.5">
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W1.1 Type Selection" description="This workspace enables the selection of the type for a newly created Model Element: Movie, Performer, MovieCollection. &#xD;&#xA;&#xD;&#xA;Data: List of Types" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.9 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.0"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W1.2 List all Elements" description="This workspace lists all projects which contain a list of all elements, either Movies, Performers and MovieCollections.&#xD;&#xA;&#xD;&#xA;Data: List of Movies&#xD;&#xA;List of Performers&#xD;&#xA;List of MovieCollections&#xD;&#xA;List of Projects&#xD;&#xA;List of Series&#xD;&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.5" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.2/@modelElements.6 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.20 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.19"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="W2 Movies" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.3">
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W2.1 List Movies" description="This workspaces lists all Movies and enables sorting. If a new rating for a Movie is set, the overall rating of the Movie is calculated.&#xD;&#xA;&#xD;&#xA;Data: List of Movies" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W2.2 Detail Movie" description="This workspace shows the details of Movie and enables editing.&#xA;&#xA;Data: Movie" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.3" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.6 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.7 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.8"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="W3 Performers">
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W3.1 List Performers" description="This workspaces lists all Performers and enables sorting. &#xA;&#xA;Data: List of Performers" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W3.2 Detail Performer" description="This workspace shows the details of Performer and enables editing.&#xA;&#xA;Data: Performer" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.6"/>
        </subsections>
        <subsections xsi:type="org.unicase.model.document:LeafSection" name="W4 Series" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.8/@modelElements.4">
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W4.1 List Series" description="This workspace lists all Series and enables sorting.&#xD;&#xA;&#xD;&#xA;Data: List of Series&#xD;&#xA;List of Seasons&#xD;&#xA;List of Episodes&#xD;&#xA;" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.3"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W4.2 Detail Series" description="This workspace shows the details of Series and enables editing.&#xD;&#xA;&#xD;&#xA;Data: Series&#xD;&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.5" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.6 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.8 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.7"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W4.3 Detail Season" description="This workspace shows the details of Season and enables editing.&#xD;&#xA;&#xD;&#xA;Data: Season&#xD;&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.4" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.9 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.10 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.11"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W4.4 Detail Episode" description="This workspace shows the details of Episode and enables editing.&#xD;&#xA;&#xD;&#xA;Data: Episode&#xD;&#xA;" attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.2" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.12 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.14 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.15 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.13"/>
          <modelElements xsi:type="org.unicase.model.requirement:Workspace" name="W4.5 AssociateMoveToSeasonWizard" description="This workspace shows all seasons, enables the selection of one season to assign the movie to.&#xD;&#xA;&#xD;&#xA;Data:&#xD;&#xA;Movie&#xD;&#xA;List of Season&#xD;&#xA;Season&#xD;&#xA;" systemFunctions="//@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.18 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.17 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.16"/>
        </subsections>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="File Attachments"/>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Views">
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="MovieManager: UI-Diagramm" description="Image-file containing the interaction of the different workspaces." fileName="W.png" fileID="_VytVsJGkEeWYE8kwusEGfg" fileSize="103118"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Web-Interface: UI-Diagramm" description="Image-File containing the UI-Diagramm for the Web-Interface." referringModelElements="//@modelElements.0/@subsections.0/@subsections.3/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.20 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.5 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.16 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.19 //@modelElements.0/@subsections.0/@subsections.4/@subsections.4/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.0 //@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.5/@modelElements.0/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.12 //@modelElements.0/@subsections.0/@subsections.4/@subsections.0/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.1/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.9 //@modelElements.0/@subsections.0/@subsections.4/@subsections.3/@modelElements.4 //@modelElements.0/@subsections.0/@subsections.4/@subsections.4/@modelElements.6" fileName="W2.png" fileID="_5qlgYJNDEeW3wLnd1CyRfw" fileSize="40169"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: (New) Episode View" description="Contains changes to the Manager Episode View due to new Requirements:&#xA;&#xD;&#xA;- The Manager is able to set an epsisode as loanable / not loanable.&#xD;&#xA;" referringModelElements="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.3 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3 //@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1" fileName="Screenshot_Manager_Episode.png" fileID="_XtVr0JGjEeWYE8kwusEGfg" fileSize="85856"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: (New) Movie View" description="Contains changes to the Manager Movie View due to new Requirements:&#xA;&#xD;&#xA;- The Manager is able to set a Movie as loanable / not loanable.&#xD;&#xA;" referringModelElements="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0 //@modelElements.0/@subsections.0/@subsections.6/@subsections.1 //@modelElements.0/@subsections.0/@subsections.6/@subsections.1/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1" fileName="Screenshot_Manager_Movie.png" fileID="_YaZmIJGjEeWYE8kwusEGfg" fileSize="67237"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: (New) Season View" description="Contains changes to the Manager Season View due to new Requirements:&#xA;&#xD;&#xA;- The Manager is able to set a Season as loanable / not loanable.&#xD;&#xA;" referringModelElements="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.2 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3 //@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1" fileName="Screenshot_Manager_Season.png" fileID="_ZSqD0JGjEeWYE8kwusEGfg" fileSize="86734"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: (New) Series View" description="Contains changes to the Manager Series View due to new Requirements:&#xA;&#xD;&#xA;- The Manager is able to set an epsisode as loanable / not loanable.&#xD;&#xA;" referringModelElements="//@modelElements.0/@subsections.0/@subsections.6/@subsections.0 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3 //@modelElements.0/@subsections.0/@subsections.6/@subsections.3/@modelElements.1 //@modelElements.0/@subsections.0/@subsections.6/@subsections.0/@modelElements.1" fileName="Screenshot_Manager_Series.png" fileID="_Z4mCcJGjEeWYE8kwusEGfg" fileSize="56604"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Return Date Page" description="GUI-Mockup for a possible Web-Interface.&#xA;&#xD;&#xA;The Return Date Page.&#xA;After picking a movie for loaning, the user is shown this window, where he / she can pick a return date according to Rule 1. If the user picks a valid date, (s)he is redirected to the results page. If the user hits abort, (s)he gets back to the details page.&#xA;" fileName="GUI_Mockup_Date.png" fileID="_5bb-IJGjEeWYE8kwusEGfg" fileSize="12092"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Details and Loan Page" description="GUI-Mockup for a possible Web-Interface.&#xD;&#xA;&#xD;&#xA;The Details and Loan Page.&#xD;&#xD;&#xA;After clicking an item in the Search Results List, the User is shown detailed information as specified by new Requirements.&#xD;&#xA;(S)he is also able to loan that movie at the press of one button. &#xD;&#xA;[Optional: (s)he is able to get back to the search results via a back-button.]&#xD;&#xA;" fileName="GUI_Mockup_Detail.png" fileID="_6CzgIJGjEeWYE8kwusEGfg" fileSize="30747"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Search Results Page" description="GUI-Mockup for a possible Web-Interface.&#xA;&#xA;The Search Results Page.&#xD;&#xA;The User is shown items found according to his / her seach tag.&#xA;If needed (s)he is able to see some information about a listed item.&#xA;" fileName="GUI_Mockup_ListItems.png" fileID="_7P1T8JGjEeWYE8kwusEGfg" fileSize="42194"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Loaned and Return Page" description="GUI-Mockup for a possible Web-Interface.&#xD;&#xA;&#xD;&#xA;The Loaned and Return Page.&#xD;&#xD;&#xA;The user is shown a list of items (s)he loaned. &#xD;&#xA;(S)he is able to return an item at just the click of one button.&#xD;&#xA;" fileName="GUI_Mockup_Return.png" fileID="_7_434JGjEeWYE8kwusEGfg" fileSize="43747"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Start and Search Page" description="GUI-Mockup for a possible Web-Interface.&#xA;&#xA;The Start and Search Page.&#xD;&#xA;It is easy to find a movie / series / season / episode by just typing it's title.&#xA;&#xA;The GUI is meant to:&#xA;- be efficient to meet the requirements of the First Persona, and&#xA;- very simple to meet the requirements of the Second Persona.&#xA;&#xA;" fileName="GUI_Mockup_Search.png" fileID="_8lQ10JGjEeWYE8kwusEGfg" fileSize="19015"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: View W1.2" description="Workspace 1.2" fileName="W_12.png" fileID="_JxgXAJGLEeW5NoimIYmpKQ" fileSize="33276"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: View W2.1" description="Workspace 2.1" fileName="W_21&#xc2;&#xb4;2.png" fileID="_LhXLEJGLEeW5NoimIYmpKQ" fileSize="32855"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Screenshot: View W3.1" description="Workspace 3.1" fileName="W_31.png" fileID="_PRLrwJGLEeW5NoimIYmpKQ" fileSize="20401"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Details and Loan Page Error" description="GUI-Mockup for a possible Web-Interface with an error message." referringModelElements="//@modelElements.4/@subsections.0/@modelElements.0/@systemtestcases.7" fileName="GUI_Mockup_Detail_Error.png" fileID="__zRK0JbxEeWLpO05LFwvSQ" fileSize="33542"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="GUI Mockup: Loaned and Return Page Error" description="GUI-Mockup for a possible Web-Interface with an error message." referringModelElements="//@modelElements.4/@subsections.0/@modelElements.0/@systemtestcases.5" fileName="GUI_Mockup_Return_Error.png" fileID="_Fqy-4JbyEeWLpO05LFwvSQ" fileSize="46746"/>
      </subsections>
    </subsections>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Non-Functional Requirements">
      <modelElements xsi:type="org.unicase.model.requirement:NonFunctionalRequirement" name="High Performance" description="The start of the system Movie Manager shall not take longer than 10 seconds."/>
    </subsections>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Glossary"/>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="Design Document">
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Architecture">
      <modelElements xsi:type="org.unicase.model.document:LeafSection" name="MovieManager-DataStorage Class-Diagramm" description="">
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Astah-File" description="An Astah-File containing the Class-Diagramm of the MovieManager-DataStorage project." fileName="Aufgabe_7.4.asta" fileID="_ukrKgJc2EeWCn7uZflLtlw" fileSize="133966"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Image-File" description="An Image-File containing the Class-Diagramm of the MovieManager-DataStorage project." fileName="Aufgabe_7.4.png" fileID="_vjWZQJc2EeWCn7uZflLtlw" fileSize="3246646"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Astah-File: Modelclasses" description="An Astah-File containing the modelclasses of the Class-Diagramm of the MovieManager-DataStorage project." fileName="Aufgabe_7.4_Ausschnitt.asta" fileID="_1ayGsJc2EeWCn7uZflLtlw" fileSize="42946"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Iamge-File: Modelclasses" description="An Image-File containing the modelclasses of the Class-Diagramm of the MovieManager-DataStorage project." fileName="Aufgabe_7.4_Ausschnitt.png" fileID="_-4EggJc2EeWCn7uZflLtlw" fileSize="544639"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Explanatory PDF" description="A PDF-File with annotations to the assosiactions between the different classes of the MovieManager-DataStorage Class-Diagramm." fileName="Aufgabe_7.4.pdf" fileID="_GS2QAJc3EeWCn7uZflLtlw" fileSize="360737"/>
      </modelElements>
      <modelElements xsi:type="org.unicase.model.document:LeafSection" name="MovieManager-UI Class-Diagramm">
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Astah-File" description="An Astah-File containing the Class-Diagramm of the MovieManager-UI project." fileName="Aufgabe_7.5.asta" fileID="_xbkvgJbQEeWir9OkYBZCbg" fileSize="27557"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Image-File" description="An Image-File containing the Class-Diagramm of the MovieManager-UI project." fileName="Aufgabe_7.5.png" fileID="_yMxi8JbQEeWir9OkYBZCbg" fileSize="144001"/>
        <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Explanatory PDF" description="A PDF-File with annotations to the assosiactions between the different classes of the MovieManager-UI Class-Diagramm." fileName="Aufgabe_7.5.pdf" fileID="_yr3SsJbQEeWir9OkYBZCbg" fileSize="375079"/>
      </modelElements>
      <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Sequence Diagram of execute() method in MovieViewHandler (.asta)" description="This file attachment contains a Sequence Diagram of the execute() method of MovieViewHandler (Ueb.7.6)&#xA;&#xA;It combines both&#xA;- analysis of the code, and &#xA;- traces of function calls in the Eclipse-Debugger.&#xA;&#xA;The file attached is in .asta format." fileName="07-Sequenzdiagramm_Combi_v0.9.asta" fileID="_2himAJiMEeWj_YE5TVf2oA" fileSize="10878"/>
      <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Sequence Diagram of execute() method in MovieViewHandler (.png)" description="This file attachment contains a Sequence Diagram of the execute() method of MovieViewHandler (Ueb.7.6)&#xA;&#xA;It combines both&#xA;- analysis of the code, and &#xA;- traces of function calls in the Eclipse-Debugger.&#xA;&#xA;The file attached is in .png format." fileName="07-Sequenzdiagramm_Combi_v0.9.png" fileID="_QEyWwJiNEeWj_YE5TVf2oA" fileSize="82154"/>
      <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Comments on Sequence Diagram of execute() method in MovieViewHandler" description="This file attachment contains a Comment Document on the&#xA;Sequence Diagram of execute() method in MovieViewHandler.&#xA;&#xA;The file attached is in .pdf format.&#xA;" fileName="07-Sequenzdiagramm_v0.9_Erlaeuterung.pdf" fileID="_4mVS0JiNEeWj_YE5TVf2oA" fileSize="43234"/>
    </subsections>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Packages"/>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="Project Management Document">
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Milestones"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Sprints" description="contains WorkPackages"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Bugs"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Issues"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Meetings"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Team"/>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="Inspection Document">
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Errors"/>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="Test Document">
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="System Test" description="">
      <modelElements xsi:type="org.unicase.model.testcase:Systemtest" name="LoanManagement" description="Contains system tests wrt management of loans.">
        <systemtestcases name="Test Unmark Series Loanable" description="This test case tests the system function unmark series loanable." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="" preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is mark as loanable." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=true." postconditionSystemstateLogic="The series and contained season and episode is marked as not loanable." postconditionSystemstateConcrete="The series and contained season and episode have attribute loanable=false." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is marked as not loanable." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as not loanable.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase" description="" preconditionGUI="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResult="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as not loanable."/>
          <steps name="new SystemtestStep" instructionLogic="Select a series" instructionConcrete="Select the series &quot;Simpsons&quot;" number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Unmark the series as loanable" instructionConcrete="Unmark the series &quot;Simpsons&quot; as loanable" number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Unmark Series Loanable with whole series loaned" description="This test case tests the system function unmark series loanable if the whole series is loaned." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="A loaned series cannot be set to not loanable." preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is mark as loanable. The series is loaned." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=true and loaned=true" postconditionSystemstateLogic="No data changed." postconditionSystemstateConcrete="No data changed." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is marked as loanable.&#xD;&#xA;An error message is shown." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as loanable.&#xD;&#xA;The series &quot;Simpsons&quot; is loaned and thus cannot be not loanable.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase" description="" preconditionGUI="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResult="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as loanable.&#xD;&#xA;The series &quot;Simpsons&quot; is loaned and thus cannot be not loanable."/>
          <steps name="new SystemtestStep" instructionLogic="Select a series" instructionConcrete="Select the series &quot;Simpsons&quot;" number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Unmark the series as loanable" instructionConcrete="Unmark the series &quot;Simpsons&quot; as loanable" number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Mark Series Loanable" description="This test case tests the system function mark series loanable." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="" preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is marked as not loanable." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=false." postconditionSystemstateLogic="The series and contained season and episode is marked as loanable." postconditionSystemstateConcrete="The series and contained season and episode have attribute loanable=true." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is marked as loanable." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as loanable.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Mark series as loanable." instructionConcrete="Mark series &quot;Simpsons&quot; as loanable." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Mark Series Loanable with season marked as not loanable" description="This test case tests the system function mark series loanable if one season is set as not loanable." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="A series cannot be set as loanable, if a season is set to not loanable." preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is marked as not loanable. " preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=false and loaned=false" postconditionSystemstateLogic="No data changed." postconditionSystemstateConcrete="No data changed." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is marked as loanable.&#xD;&#xA;An error message is shown." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as loanable.&#xD;&#xA;The season &quot;First Season&quot; is markes as not loanable and thus the series cannot be set as loanable.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Mark series as loanable." instructionConcrete="Mark series &quot;Simpsons&quot; as loanable." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Return Series" description="This test case tests the system function return item with a loaned series." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="" preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is loaned." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=true and loaned=true." postconditionSystemstateLogic="The series and contained season and episode is marked as not loaned." postconditionSystemstateConcrete="The series and contained season and episode have attribute loaned=false." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is returned." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is returned.&#xD;&#xA;">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Return series." instructionConcrete="Return series &quot;Simpsons&quot;." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Return Series with incomplete seasons" description="This test case tests the system function return series with not all seasons of the series being returned.." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.15" systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="The loaned series cannot be returned." preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is loaned. " preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=true and loaned=true" postconditionSystemstateLogic="No data changed." postconditionSystemstateConcrete="No data changed." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is returned, missing a season and its' episodes.&#xD;&#xA;An error message is shown." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is returned, missing season &quot;First Season&quot; and Episode &quot;Wie alles begann&quot;.&#xD;&#xA;An error message is shown.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select a series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Return series." instructionConcrete="Return series &quot;Simpsosn&quot;." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Loan Series" description="This test case tests the system function loan series." systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="" preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series and the contained season and episode is marked as loanable and as not loaned." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series and the contained season and episode have attribute loanable=true and loaned=false." postconditionSystemstateLogic="The series and contained season and episode is marked as loaned." postconditionSystemstateConcrete="The series and contained season and episode have attribute loaned=true." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series is loaned." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; is marked as loanable.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Loan series." instructionConcrete="Loan series &quot;Simpsons&quot;." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Loan incomplete Series" description="This test case tests the system function loan series, when not all seasons of the series are available for loan." attachments="//@modelElements.0/@subsections.0/@subsections.8/@modelElements.14" systemtestcaseInfrastructure="Started MovieManager application containing a project and a series." expectedException="The series cannot be loaned." preconditionSystemstateLogic="Project containing a series with a season and an epsiode. The series is marked as loanable and not loaned, but the season and the episode are already loaned." preconditionSystemstateConcrete="Series &quot;Simpsons&quot;, Season &quot;First Season&quot; and Epsiode &quot;Wie alles begann.&quot; The series is marked as not loaned and loanable. The season and the episode are loaned." postconditionSystemstateLogic="No Data is changed." postconditionSystemstateConcrete="No Data is changed." preconditionGUILogic="W1 Overview with project and series" preconditionGUIConcrete="W1 Overview with project &quot;My Series&quot; containing the series &quot;Simpsons&quot;." expectedGUIResultLogic="W4.2 Detail Series&#xD;&#xA;The series cannot be loaned.&#xD;&#xA;An error message is shown." expectedGUIResultConcrete="W4.2 Detail Series&#xD;&#xA;The series &quot;Simpsons&quot; cannot be loaned.&#xD;&#xA;An error message is shown.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select a series." instructionConcrete="Select series &quot;Simpsons&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Loan a series." instructionConcrete="Loan series &quot;Simpsons&quot;." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Sort movies by title" description="This test case tests the system function sort movies by title." systemtestcaseInfrastructure="Started MovieManager application containing a project and three movies.&#xD;&#xA;" expectedException="" preconditionSystemstateLogic="Project containing (a list of) three movies with valid titles ." preconditionSystemstateConcrete="Project containing (a list of) three movies:&#xD;&#xA;- &quot;B&quot;&#xD;&#xA;- &quot;A&quot;&#xD;&#xA;- &quot;C&quot;" postconditionSystemstateLogic="W1 Overview with project and a sorted list of movies." postconditionSystemstateConcrete="W1 Overview with project &quot;My Movies&quot; containing (a sorted list of) the movies &quot;A&quot;, &quot;B&quot; and &quot;C&quot;." preconditionGUILogic="W1 Overview with project and (a list of)  movies." preconditionGUIConcrete="W1 Overview with project &quot;My Movies&quot; containing (a list of) the movies &quot;B&quot;, &quot;A&quot; and &quot;C&quot;." expectedGUIResultLogic="W1 Overview with project and a sorted list of movies." expectedGUIResultConcrete="W1 Overview with project &quot;My Movies&quot; containing (a sorted list of) the movies &quot;A&quot;, &quot;B&quot; and &quot;C&quot;.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select Project." instructionConcrete="Select &quot;My Movies&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Sort movies by title." instructionConcrete="Sort movies &quot;B&quot;, &quot;A&quot; and &quot;C&quot; by title." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Sort movies by title with an empty list of movies" description="This test case tests the system function sort movies by title with an empty list of movies." systemtestcaseInfrastructure="Started MovieManager application containing a project and no items.&#xD;&#xA;" expectedException="No Movies can be sorted." preconditionSystemstateLogic="Project containing no items." preconditionSystemstateConcrete="Project &quot;My Project&quot; containing no items." postconditionSystemstateLogic="Nothing happens." postconditionSystemstateConcrete="Nothing happens." preconditionGUILogic="W1 Overview with project." preconditionGUIConcrete="W1 Overview with &quot;My Project&quot;." expectedGUIResultLogic="W1 Overview with project." expectedGUIResultConcrete="W1 Overview with &quot;My Project&quot;.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select a project." instructionConcrete="Select project &quot;My Movies&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Sort movies by title." instructionConcrete="Sort empty list by title." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Filter movies by title" description="This test case tests the system function filter movies by title." systemtestcaseInfrastructure="Started MovieManager application containing a project and three movies." expectedException="" preconditionSystemstateLogic="Project containing (a list of) three movies with valid titles ." preconditionSystemstateConcrete="Project containing (a list of) three movies:&#xD;&#xA;- &quot;B&quot;&#xD;&#xA;- &quot;A&quot;&#xD;&#xA;- &quot;C&quot;" postconditionSystemstateLogic="W1 Overview with project showing only movies matching the filter tag." postconditionSystemstateConcrete="W1 Overview with project &quot;My Movies&quot; showing only the movie &quot;A&quot; matching the filter tag &quot;A&quot;." preconditionGUILogic="W1 Overview with project and (a list of)  movies." preconditionGUIConcrete="W1 Overview with project &quot;My Movies&quot; containing (a list of) the movies &quot;B&quot;, &quot;A&quot; and &quot;C&quot;." expectedGUIResultLogic="W1 Overview with project showing only movies matching the filter tag." expectedGUIResultConcrete="W1 Overview with project &quot;My Movies&quot; showing only the movie &quot;A&quot; matching the filter tag &quot;A&quot;.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select Project." instructionConcrete="Select project &quot;My Movies&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Type in filter tag." instructionConcrete="Type in filter tag &quot;A&quot;." number="2"/>
        </systemtestcases>
        <systemtestcases name="Test Filter movies by title with non-matching filter tag" description="This test case tests the system function filter movies by title." systemtestcaseInfrastructure="Started MovieManager application containing a project and three movies." expectedException="No movie is shown." preconditionSystemstateLogic="Project containing (a list of) three movies with valid titles ." preconditionSystemstateConcrete="Project containing (a list of) three movies:&#xD;&#xA;- &quot;B&quot;&#xD;&#xA;- &quot;A&quot;&#xD;&#xA;- &quot;C&quot;" postconditionSystemstateLogic="W1 Overview with project showing no movie." postconditionSystemstateConcrete="W1 Overview with project &quot;My Movies&quot; showing no movie." preconditionGUILogic="W1 Overview with project and (a list of)  movies." preconditionGUIConcrete="W1 Overview with project &quot;My Movies&quot; containing (a list of) the movies &quot;B&quot;, &quot;A&quot; and &quot;C&quot;." expectedGUIResultLogic="W1 Overview with project showing no movie." expectedGUIResultConcrete="W1 Overview with project &quot;My Movies&quot; showing no movie.">
          <systemtestProtocol name="Testprotocol for new SystemtestCase"/>
          <steps name="new SystemtestStep" instructionLogic="Select project." instructionConcrete="Select project &quot;My Movies&quot;." number="1"/>
          <steps name="new SystemtestStep" instructionLogic="Type in in filter tag." instructionConcrete="Type in filter tag &quot;%%%&quot;." number="2"/>
        </systemtestcases>
      </modelElements>
      <modelElements xsi:type="org.unicase.model.attachment:FileAttachment" name="Explanatory PDF" description="Containing a PDF explaining the choice of the Systemtest Cases." fileName="Aufgabe_7.2.pdf" fileID="_gwcocJbwEeWLpO05LFwvSQ" fileSize="365042"/>
    </subsections>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Integration Test"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="Component Test"/>
    <subsections xsi:type="org.unicase.model.document:LeafSection" name="File Attachments"/>
  </modelElements>
</org.eclipse.emf.emfstore.common.model:Project>
